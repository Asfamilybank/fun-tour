name: FUN TOUR FRONTEND CI

on:
  push:
    branches: 
      - main
      - dev
env:
  # 自定义的镜像基础名称
  IMAGE_NAME: fun-tour

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: 
        - 16.x
    steps:
    # 定义生产环境的环境变量，只在main分支执行
    - name: Set env to production
      if: endsWith(github.ref, 'main')
      run: |
        echo "DOCKER_PORT=3003" >> $GITHUB_ENV
        echo "IMAGE_TAG=prod_${{ github.sha }}" >> $GITHUB_ENV
    
    # 定义测试环境的环境变量，只在dev分支执行
    - name: Set env to development
      if: endsWith(github.ref, 'dev')
      run: |
        echo "DOCKER_PORT=3004" >> $GITHUB_ENV
        echo "IMAGE_TAG=dev_${{ github.sha }}" >> $GITHUB_ENV
    
    # 对应第2步，拉取指定分支代码
    - name: Fetch code
      uses: actions/checkout@v2
    
    # 第3步的准备工作，先配置好node环境
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3.1.1
      with:
        node-version: ${{ matrix.node-version }}
        cache: yarn
    
    # 对应第3步，执行打包命令
    - name: Build Front
      run: |
        yarn
        yarn build
      
    # 第5步的准备工作，设置docker环境
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    # 第5步的准备工作
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v2
      with:
        context: .
        file: config/Dockerfile
        load: true
        tags: ${{ env.IMAGE_NAME }}
    
    - run: |
        docker image list -a

    - name: Test
      run: |
        docker run --rm ${{ env.IMAGE_NAME }}
    
    # 对应第5步，构建 docker 镜像，并上传到阿里云镜像服务
    - name: Build and push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: config/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_TAG }}