name: FUN TOUR FRONTEND CI
on:
  push:
    branches:
      - main
      - dev
    paths:
      - src/**
      - .github/**
      - package.json
env:
  IMAGE_NAME: fun-tour
  PROD_PORT: 8091
  DEV_PORT: 8092
jobs:
  test:
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - run: |
          yarn
          yarn coverage
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-output
          path: coverage
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.1.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: Build Front
        run: |
          yarn
          yarn build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist
  push:
    needs: build
    runs-on: ubuntu-latest
    env:
      REF: ${{ github.ref_name }}
    steps:
      - if: ${{ env.REF == 'main' }}
        run: |
          echo "PRO_PORT=$PROD_PORT" >> $GITHUB_ENV
          echo "PRO_ENV=prod" >> $GITHUB_ENV
      - if: ${{ env.REF == 'dev' }}
        run: |
          echo "PRO_PROT=$DEV_PORT" >> $GITHUB_ENV
          echo "PRO_ENV=dev" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}_${{ env.PRO_ENV }}
        with:
          context: .
          file: config/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }},${{ env.DOCKER_IMAGE }}:latest
  deploy:
    needs: [build, push]
    runs-on: ubuntu-latest
    env:
      REF: ${{ github.ref_name }}
    steps:
      - if: ${{ env.REF == 'main' }}
        run: |
          echo "PRO_PORT=8091" >> $GITHUB_ENV
          echo "PRO_ENV=prod" >> $GITHUB_ENV
      - if: ${{ env.REF == 'dev' }}
        run: |
          echo "PRO_PROT=8092" >> $GITHUB_ENV
          echo "PRO_ENV=dev" >> $GITHUB_ENV
      - uses: appleboy/ssh-action@master
        env:
          DOCKER_CONTAINER: ${{ secrets.DOCKERHUB_USERNAME }}_${{ env.IMAGE_NAME }}_${{ env.PRO_ENV }}
          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}_${{ env.PRO_ENV }}
        with:
          host: secrets.REMOTE_HOST
          port: secrets.REMOTE_PORT
          key: secrets.REMOTE_KEY
          username: secrets.REMOTE_USERNAME
          script: |
            docker rm -f ${{ env.DOCKER_CONTAINER }}
            docker rmi -f ${{ env.DOCKER_IMAGE }}
            docker pull ${{ env.DOCKER_IMAGE }}
            docker run --name ${{ env.DOCKER_CONTAINER }} -p ${{ env.PRO_PORT }}:80 -dit ${{ env.DOCKER_IMAGE }}
