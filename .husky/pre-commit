#!/usr/bin/env node
console.time('pre-commit completed')
const childProcess = require('child_process')
const command = (command) => {
  return childProcess.execSync(command)
}

try {
  const fileList = command('git status --porcelain --short')
    .toString()
    .trimEnd()
    .split('\n')
    .map((m) => ({
      status: m[0] + m[1],
      staged: m[0],
      noStaged: m[1],
      isStaged: m[0] !== ' ' && m[0] !== '?',
      path: m.slice(3)
    }))
  const stagedList = fileList.filter((f) => f.isStaged).map((m) => m.path)

  if (!stagedList?.length) {
    throw { stdout: 'No file to commit!' }
  }

  console.log('\nWill commit files:\n  ' + stagedList.join('\n  '))

  const lintList = fileList
    .filter((f) => f.isStaged && f.staged !== 'D')
    .map((m) => m.path)
    .join(' ')

  console.log('\nWill lint files:\n  fix files with eslint')
  command(`pnpm lint:fix ${lintList}`)
  console.log('  format files with prettier')
  command(`pnpm lint:format ${lintList}`)

  console.log('\nWill completed!')
  command(`git add ${lintList}`)

  console.timeEnd('pre-commit completed')
  console.log('')
} catch (error) {
  console.log(error.stdout.toString())
  process.exit(1)
}
